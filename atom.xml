<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[MarsW's Technical Blog]]></title>
  <link href="http://MarsW.github.com/atom.xml" rel="self"/>
  <link href="http://MarsW.github.com/"/>
  <updated>2013-01-10T01:33:10+08:00</updated>
  <id>http://MarsW.github.com/</id>
  <author>
    <name><![CDATA[MarsW]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[旅遊規畫服務 使用心得]]></title>
    <link href="http://MarsW.github.com/blog/2013/01/09/travel/"/>
    <updated>2013-01-09T16:25:00+08:00</updated>
    <id>http://MarsW.github.com/blog/2013/01/09/travel</id>
    <content type="html"><![CDATA[<p>最近剛好在排國內外旅遊的行程，
以往的旅遊規劃模式：(排除訂旅館、機票的部分)</p>

<ul>
<li>Step 1.蒐集資料：找好玩、好吃、必買、旅館</li>
<li>Step 2.安排行程：考量交通位置、停留時間，選第1步挑選到的排入行程</li>
<li>Step 3.輸出旅遊手冊：各景點怎麼去、營業時間、電話、價錢、注意事項 (行李、購物、明信片list)</li>
</ul>


<p>通常Step 2.是最麻煩的部分，
因此我嘗試了一些已有的旅遊規畫服務：<br/>
Yourfix、iBeenGo、tripwon、TripIt  (其他的通常是版面設計讓我卻步)</p>

<p>簡單介紹這四者的特點</p>

<h2><a href="http://yourfix.cc/">Yourfix</a></h2>

<p>功能</p>

<ul>
<li>★從已有景點安排：選擇&#8221;我想去&#8221;的景點 (大大節省在 Step 1.的時間)</li>
<li>★每個景點都是有詳細資訊(地圖、開放時間、交通方式)，且有部落格評價，非常具有價值</li>
<li>從地圖上拖曳&#8221;我想去&#8221;的景點來安排行程：可以了解相對位置，就不會因為想去，<br/>
結果兩個景點太遠，而搞到自己東奔西跑</li>
<li>已安排的景點顏色會不同：可以知道哪些景點沒有安排</li>
<li>有移動時間預估(步行、開車)</li>
</ul>


<p>缺點</p>

<ul>
<li>不能自己新增景點</li>
<li>只能有一個暫存的旅遊規畫</li>
<li>排行程介面設計不夠直覺，且穩定度須加強：

<ul>
<li>下次登入需要排之前的行程，需要先從&#8221;找景點&#8221;，隨便按一個(&#8220;已加入景點&#8221;不能為0)，<br/>
再按&#8221;排行程&#8221;，載入草稿才行</li>
<li>我想去的景點是地圖，無法總覽我想去哪些點</li>
<li>點之間靠太近會不容易按到&#8221;我想去&#8221;的按鈕</li>
<li>按過&#8221;我想去&#8221;的景點有時會莫名其妙消失，這樣下次又要重做，頗不方便</li>
</ul>
</li>
<li>沒有free tiem時間的安排</li>
<li>沒有交通工具的考量，只適用於國內自行開車</li>
<li>沒有手機同步功能</li>
</ul>


<h2><a href="http://www.ibeengo.com/">iBeenGo</a></h2>

<p>功能</p>

<ul>
<li>★可以直接複製其他人的行程，再自行修改變成自己的行程</li>
<li>★結合訂房服務</li>
<li>每個時段自行輸入行程，有地圖預覽可以看相對位置</li>
<li>有移動時間預估(步行、單車、開車)</li>
<li>亦有推薦景點功能</li>
</ul>


<p>缺點</p>

<ul>
<li>推薦景點比起Yourfix的景點少很多，可以直接忽略</li>
<li>沒有交通工具的考量，只適用於國內自行開車</li>
<li>安排行程是每個時段自行輸入行程景點，這種旅遊規劃方式不太直覺</li>
<li>沒有手機同步功能</li>
</ul>


<h2><a href="http://www.tripwon.com">Tripwon</a></h2>

<p>功能</p>

<ul>
<li>★操作方式完全貼合旅行經驗

<ul>
<li>安排行程是先新增景點，再從想去的景點中拖曳至行程空白的區間：可以蒐集資料後先新增景點再安排，而不是像其他要先選每個時段要幹嘛，再去蒐集景點資料。</li>
<li>&#8220;未加入行程&#8221;的功能：在安排行程後，沒有加入行程的景點會有一個獨立區塊，<br/>
這很適合有free time 的參考景點</li>
<li>有交通工具的選項，功能很不錯</li>
<li>景點&#8221;怎麼去&#8221;的欄位很符合需求，因為只有地址是不夠的。</li>
<li>每個景點有預估花費、必玩、必吃的選項</li>
<li>購物list、明信片list、緊急連絡電話，對於出國的行程規畫更是好用</li>
</ul>
</li>
<li>待辦事項的設計</li>
<li>匯率查詢</li>
<li>旅行後把一些私密資料刪除，加一些旅遊的體驗敘述，可以把這份行程當作遊記分享。</li>
</ul>


<p>缺點</p>

<ul>
<li>沒有手機同步功能</li>
<li>pdf輸出沒有按照天數分開(Yourfix有)，每天行程路徑和行程分開(所有地圖集中在最後)</li>
<li>每個景點只能去一次，若要去多次，沒有copy功能，只能手動輸入</li>
<li>因為是從整個景點pool去拉想要的行程出來，<br/>
景點一多而且沒有分類，在pool中要找想去的景點就會有一點麻煩，</li>
</ul>


<h2><a href="https://www.tripit.com/">TripIt</a></h2>

<p>功能</p>

<ul>
<li>★與手機、平板同步功能</li>
<li>★多層次的設計：行程有簡略版本也有詳細版本可供輸出</li>
<li>景點可以上傳多張照片</li>
<li>訂機票、旅館的email可以forward到tripit，就不需要自行輸入(但只認得英文)</li>
<li>多人編輯功能</li>
<li>每個時段自行輸入行程</li>
<li>旅行後把一些私密資料刪除，加一些旅遊的體驗敘述，可以把這份行程當作遊記分享。</li>
</ul>


<p>缺點</p>

<ul>
<li>英文介面</li>
<li>每個活動的欄位太多，很多detail反而會很繁瑣。</li>
<li>沒有移動距離參考。</li>
<li>安排行程是每個時段自行輸入行程景點，這種旅遊規劃方式不太直覺。</li>
<li>沒有像前三者有別人規劃的行程可以參考(連結是每個人自己share，沒有社群功能的整合)</li>
</ul>


<h1>總結：</h1>

<p>想找好玩景點卻&#8221;不想爬一堆blog&#8221;，還有煩惱每個景點的注意事項及交通 => Yourfix<br/>
你已經爬了很多遊記，整理出自己的獨家行程，想要有一個服務可以讓你&#8221;安排行程&#8221;：<br/>
國內旅遊，想要同時有訂房服務=>iBeenGo <br/>
國內外旅遊：<br/>
在free time安排一些參考景點，以及未來的遊記製作 => Tripwon<br/>
需要行程能跟手機、平板同步=> TripIt</p>

<p>我自己而言，最後是tripwon勝出，主宰我最近的國內外旅遊。<br/>
主要原因就是我自己喜歡去爬很多資料，找自己喜歡的景點還有旅館民宿，不喜歡被限制<br/>
而我覺得tripwon是從新增景點，然後從景點pool中來安排行程是一個很讚的idea，<br/>
不像一般網站就是要看著空白的schedule，然後一個時段一個時段來插入活動。<br/>
而且這個好處是像自由行，總會有一些景點不錯，但不知道時間夠不夠能去，<br/>
而在&#8221;未安排的行程&#8221;這個欄位，就提供了我們在free time可以參考的選擇。<br/>
加上他在每個景點的欄位中，不多不少的選項(TripIt太繁瑣、Yourfix&amp;iBeenGo卻又太少)，<br/>
尤其是&#8221;怎麼去&#8221;的欄位，比起地址才是真正貼合到我們旅遊所需要的。<br/>
還有像是我們旅行中會先訂機票、旅館這兩個最重要的事情，會主宰我們的行程，<br/>
tripwon的方式就可以先把這兩類資料先輸入，讓你在要安排景點的時候，<br/>
就先看到某時段是要搭機，或是要check in，check out，在安排行程的時候就會預留一些時間&#8230;&#8230;<br/>
這些種種，是要有真正旅行的體會，才會想得到的服務，<br/>
也讓我佩服tripwon創辦人的用心，也期待他們會更加進步。</p>

<p>還滿希望這些服務能有包含公車、捷運地鐵公眾運輸系統的路線規劃(非自行輸入)xDDDD</p>

<hr />

<p>這陣子我越來越倚賴數位化工具，來幫我處理一些生活周遭的事情<br/>
分享一下我國內外行程的規劃方式：<br/>
在 Step 1.的部分，我是把Evernote當成剪貼簿，把網路上看到別人出遊的行程、景點做整理，<br/>
然後在FB的私密活動中，share link給同行的人看目前我查到的資料。<br/>
但缺點是這只有單方面的分享，只有我才能更新資料，而且是文章形式，<br/>
畢竟evernote比較像是個人筆記的角色。<br/>
後來是用tripwon把每個景點輸入進去，這樣就有是景點為主的行程概覽。<br/>
而我們在安排行程的時候，是將每一個點的景點類別(餐廳、活動)、建議停留時間、價錢，<br/>
寫在便利貼上，然後把每個我們想要行程的便利貼移到Day1,Day2的紙上&#8230;&#8230;<br/>
在這個過程中，還好有tripwon之前輸入的旅館資料提醒我：<br/>
有一天的行程本來要出海，但那天剛好要換旅館，<br/>
考慮到check in &amp; check out還有換旅館的時間，就把行程跟前一天對調，才不會讓行程很趕。</p>

<p>之後可以考慮看看用<a href="http://playpcesor.blogspot.com/2008/04/linoit.html">linoit</a>，<br/>
share一個link，大家就自己找資料向便利貼一樣把一些不錯的點，都&#8221;貼&#8221;上去。<br/>
一個景點就是一張便利貼，寫上景點類別(餐廳、活動)、建議停留時間、價錢、注意事項<br/>
然後也不需要同行的人要在一起，可以網路上討論利用linoit的連結來做安排行程的動作，<br/>
之後再用tripwon來把行程輸入進去，加上注意事項，就可以當成一個很完整的旅遊手冊了。</p>

<p>像我自己很喜歡手寫的感覺，會習慣帶一本MUJI的小本空白筆記本在身上，<br/>
隨時記下現在的心情想法、畫面、花費，還有收藏票據&#8230;&#8230;<br/>
但也拋不開數位裝置的方便，可以節省很多印製紙張的成本，跟網路的便利，<br/>
對我來說手機上的行程最好是越簡略越好，而ipad上可以是很詳細的資料，<br/>
很期待tripwon的手機同步功能推出!!!<br/>
這些旅遊服務可以省去我們很多時間，<br/>
同時也能將自己蒐集的資料，<br/>
跟旅遊心得很快速的分享給其他人，  <br/>
讓其他人也可以省去很多時間，<br/>
我想這就是這類旅遊規畫服務越來越盛行的原因吧!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Octopress on Windows from zero to 100]]></title>
    <link href="http://MarsW.github.com/blog/2012/11/23/setup-octopress-on-windows-from-zero-to-100/"/>
    <updated>2012-11-23T19:09:00+08:00</updated>
    <id>http://MarsW.github.com/blog/2012/11/23/setup-octopress-on-windows-from-zero-to-100</id>
    <content type="html"><![CDATA[<h2>從零到一百 ~ 在 Windows上使用 Octopress</h2>

<p>使用平台：Win7 32bit</p>

<h2>[Github]</h2>

<ul>
<li>申請Github帳號</li>
<li><p>建立Github pages (使用 Automatic Page Generator)<br/>
=> New repository<br/>
=> Repository name的地方打 你想要的github page網址 (像我就是打marsw.github.com)<br/>
=> Create repository<br/>
=> 進入該repository頁面，選擇admin<br/>
<img src="http://goo.gl/AosSQ" alt="" />
=> Automatic Page Generator
<img src="http://goo.gl/LLgtZ" alt="" /><br/>
=> Continue to Layouts<br/>
=> PUBLIS</p>

<p>之後會收到信，大概要10分鐘，Github Page就會產生好囉!</p></li>
<li><p>Github ssh key<br/>
打開windows command line<br/>
<code>ssh-keygen -C "username@email.com" -t rsa</code><br/>
照著上面的指示，輸入密碼或跳過設定密碼。</p></li>
</ul>


<p> /USER/.ssh中存放著成對的key
 - id_rsa.pub ： public key<br/>
 - id_rsa ： private key (請小心保存)</p>

<p> 複製public key(小心不要複製到空格)貼到github帳號中的SSH Public Keys欄位<br/>
<img src="http://goo.gl/cGtGs" alt="" />
<img src="http://goo.gl/vjMuz" alt="" />
 延伸：<a href="http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/">git教學</a></p>

<h2>[Install Ruby]</h2>

<ul>
<li><a href="http://rubyinstaller.org/downloads/">下載</a> RubyInstaller(已包含Gem) 和 Development Kit</li>
<li>解壓縮 Development Kit</li>
<li><p>到  Development Kit 資料夾底下下指令  (cmd)</p>

<pre><code>  cd C:\Devkit  
  ruby dk.rb init    #產生 config.yaml，裡面有你的 ruby 路徑，一般會幫你設好  
  ruby dk.rb install 
</code></pre></li>
<li><p>保險起見，更新一下gem</p>

<pre><code>  gem update --system  
  gem update
</code></pre></li>
</ul>


<h2>[Install Git]</h2>

<p>下載 <a href="http://git-scm.com/">Git</a> ，並安裝</p>

<h2>[Setup Octopress]</h2>

<ul>
<li><p>開啟Git</p>

<pre><code>  git clone git://github.com/imathis/octopress.git octopress
  cd octopress   
  gem install bundler
  bundle install      # 安裝 Gemfile 檔案中所列的 gems
  rake install        # 安裝預設的 Octopress 樣式
</code></pre></li>
<li><p>讓Octopress支援中文</p>

<pre><code>  set LANG=zh_TW.UTF-8  
  set LC_ALL=zh_TW.UTF-8  
</code></pre></li>
<li><p>設定 Blog 放到GitHub Page上</p>

<pre><code>  rake setup_github_pages  #按下enter後會要你輸入url
</code></pre>

<img src="http://goo.gl/CclvU" alt="" />

<pre><code>  git@github.com:MarsW/marsw.github.com.git   #MarsW是我的帳戶名稱，後面是我專案名稱
  rake generate #產生網站檔案
  rake deploy   #發佈到github
</code></pre></li>
<li><p>預覽</p>

<pre><code>  rake preview #在本機開port 4000 的 web server
</code></pre>

<p>就可以在 <a href="http://127.0.0.1:4000/">http://127.0.0.1:4000/</a> 看到預覽畫面
<img src="http://goo.gl/NGuUe" alt="" /></p></li>
<li>修改 Octopress 設定<br/>
修改_config.yml  <a href="http://octopress.org/docs/configuring/">設定參數</a></li>
</ul>


<h2>[安裝時遇到的問題]</h2>

<ul>
<li><p>下指令 <code>rake setup_github_pages</code> ，噴出錯誤訊息</p>

<pre><code>  rake aborted!
  You have already activated rake 10.0.2, but your Gemfile requires rake 0.9.2.2.
  Using bundle exec may solve this.
  c:/Users/MarsW/octopress/Rakefile:2:in `&lt;top (required)&gt;'
  (See full trace by running task with --trace)
</code></pre>

<blockquote><p>更改Gemfile (在/USER/octopress中)<br/>
  修改成 <code>gem 'rake', '~&gt; 10.0.2'</code></p></blockquote></li>
<li><p>下指令 <code>rake deploy</code> ，噴出錯誤訊息</p>

<pre><code>  error: src refspec master does not match any.
  error: failed to push some refs to 'git@github.com:MarsW/marsw.github.com.git'
</code></pre>

<blockquote><p>輸入 <code>git config --global user.email "你github的email"</code><br/>
輸入 <code>git config --global user.name "你github的帳號"</code></p></blockquote></li>
</ul>


<h2>[Reference]</h2>

<blockquote><h6>不歸錄 <a href="http://tonytonyjan.github.com/2012/03/01/install-octopress-on-windows/">在 Windows 使用 Octopress</a></h6>

<h6>Programming Design Notes <a href="http://pro.ctlok.com/blog/2012/03/26/windows-install-octopress.html">在 Windows 設定 Octopress</a></h6>

<h6>雨蒼的終端機 <a href="http://billy3321.blogspot.tw/2009/02/github-howto.html">使用Git與Github管理軟體開發專案</a></h6></blockquote>

<hr />

<p>在Octopress裡面寫文章不像一般blog有帳號登入的頁面， <br/>
每篇文章就是一個markdown檔，就像以前開啟記事本或word一樣，  <br/>
打完之後下個指令把markdown轉成html，然後上傳這樣。</p>

<h2>[建立新文章]</h2>

<p>打開Git</p>

<pre><code>cd octopress 
rake new_post["文章標題"]
</code></pre>

<h2>[編輯文章]</h2>

<p>不管是新建立、或是修改之前的文章，
在資料夾source/_posts/，可以看到建立的文件<code>日期-標題.markdown</code>
想刪除文章也是在此直接delete掉檔案就好
打開自己習慣用的markdown編輯器，就可以編寫文章囉<br/>
個人用的是MarkdownPad或notepad++
<a href="http://markdown.tw/">markdown語法教學</a></p>

<h2>[上傳文章]</h2>

<p>不管是更改Octopress設定、編輯文章、刪除文章&#8230;這些變動<br/>
所要做的就是，打開Git</p>

<pre><code>cd octopress 
rake generate #產生網站檔案
rake deploy   #發佈到github
</code></pre>

<h2>[上傳文章時遇到的問題]</h2>

<ul>
<li><p>下指令 <code>rake generate</code> ，噴出一長串錯誤</p>

<pre><code>  ## Generating Site with Jekyll
  unchanged sass/screen.scss
  c:/Ruby193/lib/ruby/gems/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_doc.rb:2
  2:in `&lt;top (required)&gt;': iconv will be deprecated in the future, use String#enco
  de instead.
  Configuration from c:/Users/MarsW/octopress/_config.yml
  Building site: source -&gt; public
  c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/convertible.rb:29:in `read_yaml': invalid byte sequence in CP950 (ArgumentError)
          from c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/post.rb:39:in `initialize'
          from c:/Users/MarsW/octopress/plugins/preview_unpublished.rb:23:in `new'

          from c:/Users/MarsW/octopress/plugins/preview_unpublished.rb:23:in `block in read_posts'
          from c:/Users/MarsW/octopress/plugins/preview_unpublished.rb:21:in `each'
          from c:/Users/MarsW/octopress/plugins/preview_unpublished.rb:21:in `read_posts'
          from c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:128:in `read_directories'
          from c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:98:in `read'
          from c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:38:in `process'
          from c:/Ruby193/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/bin/jekyll:250:in`&lt;top (required)&gt;'
          from c:/Ruby193/bin/jekyll:23:in `load'
          from c:/Ruby193/bin/jekyll:23:in `&lt;main&gt;'
</code></pre></li>
</ul>


<blockquote><ul>
<li>修改

<h6><code>C:\ruby193\lib\ruby\gems\1.9.1\gems\jekyll-0.11.0\lib\jekyll\convertible.rb</code></h6></li>
</ul>
</blockquote>

<pre><code>def read_yaml(base, name)
  self.content = File.read(File.join(base, name))

  if self.content =~ /^(---\s*\n.*?\n?)^(---\s*$\n?)/m
    self.content = $POSTMATCH

    begin
      self.data = YAML.load($1)
    rescue =&gt; e
      puts "YAML Exception reading #{name}: #{e.message}"
    end
  end
</code></pre>

<p>將
<code>self.content = File.read(File.join(base, name))</code><br/>
修改為
<code>self.content = File.read(File.join(base, name), :encoding =&gt; “utf-8”)</code></p>

<blockquote><ul>
<li>確認文章編碼為UTF-8(無BOM)

<h6>MarkdownPad本身存檔就是UTF-8(無BOM)，notepad++要調編碼</h6></li>
</ul>
</blockquote>

<h2>[Reference]</h2>

<blockquote><h6>高見龍 <a href="http://blog.eddie.com.tw/2011/10/11/how-to-install-octopress-on-heroku/">How to Install Octopress on Heroku</a></h6>

<h6>Larry&#8217;s Blog <a href="http://larry0529.github.com/blog/2012/04/29/20120429/">win建立Octopress無法使用中文？</a></h6></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress!!!]]></title>
    <link href="http://MarsW.github.com/blog/2012/11/23/hello-octopress/"/>
    <updated>2012-11-23T11:41:00+08:00</updated>
    <id>http://MarsW.github.com/blog/2012/11/23/hello-octopress</id>
    <content type="html"><![CDATA[<h4>首次在Octopress發文</h4>

<p>之前看了hacker級的blog都是用Octopress架<br/>
就有心想要學學看<br/>
想說跟原來的blogger做個區別<br/>
這裡當做自己在Computer Science的學習記錄<br/>
還有一些自己摸索的筆記 希望也能當教學文<br/>
原來的blogger 就比較偏向旅遊生活雜感這樣</p>

<p>之後更熟悉之後 就會來發Octopress on Win7的教學文囉</p>
]]></content>
  </entry>
  
</feed>
